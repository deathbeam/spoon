# vim: set ft=rb:

def src  = "src/"                                  # Path to Raxe source
def dest = "build/"                                # Path to generate Haxe source
def xml  = "docs/index.xml"                        # Path to generate documentation XML
def docs = "docs/build"                            # Path to generate documentation HTML
def bin  = "run.n"                                 # Path to generate Neko binary
def main = "raxe.cli.Main"                         # Entry point for CLI
def libs = {"hscript", "mcli", "tink_lang", "dox"} # Haxelib libraries to use

###############################################################################
# Default task which is executed when no task is specified.
# This task first compiles Raxe source to Haxe source and then generates
# Neko binary.
###############################################################################
def default()
  compileRaxe()
  compileBinary()
end

###############################################################################
# Install all missing dependencies for Raxe
###############################################################################
def installLibs()
  echo("> Installing Raxe dependencies")

  for(lib in libs)
    sh("haxelib", {"install", lib})
  end
end

###############################################################################
# Compile Raxe source to Haxe source
###############################################################################
def compileRaxe()
  echo("> Compiling Raxe source files")
  sh("haxelib", {"run", "raxe", "-a", "-s", src, "-d", dest})
end

###############################################################################
# Compile generated Haxe source to Neko binary
###############################################################################
def compileBinary()
  echo("> Building neko binary")

  def args = {"-cp", dest, "-main", main, "-neko", bin, "-D", "cli"}

  for(lib in libs)
    args.push("-lib")
    args.push(lib)
  end

  sh("haxe", args)
end

###############################################################################
# Generate documentation from RaxeDoc
###############################################################################
def generateDocs()
  echo("> Generating documentation")

  def args = {"-cp", dest, "-main", main, "-xml", xml}

  for(lib in libs)
    args.push("-lib")
    args.push(lib)
  end

  sh("haxe", args)
  sh("haxelib", {"run", "dox", "-i", xml, "-o", docs})
end

###############################################################################
# Compile all examples from examples/ folder to examples/build/
###############################################################################
def compileExamples()
  echo("> Compiling Raxe examples")
  sh("haxelib", {"run", "raxe", "-s", "examples", "-d", "examples/build"})
end
