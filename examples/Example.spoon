# Pythonic module system
from Sys import print

# Macros and generic types
@:generic
class MyValue<T>
  function new(value as T)
    this.value = value
  end
end

# Interfaces with default implementation
interface Greeter
  function greet(name as MyValue<String>)
    print "Hello #name"
  end
end

# Classes and OOP
class Person
  include Greeter
end

# Top-level expressions
name = MyValue<String>("Alice")

# Easy method of creating new objects and chaining with special ! operator
# what is replacement for (), in this case for ().
Person!greet name

# vim: set ft=coffee:
