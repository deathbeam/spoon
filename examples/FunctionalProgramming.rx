-- vim: set ft=rb:

class self

-- A definition of factorial, using a local, tail recursive function
def self.factorial(n: Int): Int
  def go(n: Int, acc: Int): Int
    if (n <= 0)
      acc
    else
      go(n-1, n*acc)
    end
  end

  go(n, 1)
end

-- Another implementation of `factorial`, this time with a `while` loop
def self.factorial2(n: Int): Int
  def acc = 1
  def i = n

  while (i > 0)
    acc *= i
    i -= 1
  end

  acc
end

def self.compute(n: Int, f: Int -> Int): Int
  f(n)
end

def self.main()
  def number = 10 -- Compute factorials for number 10

  -- Compute with recursive factorial method
  trace(compute(number, factorial))
  -- Compute with loop factorial method
  trace(compute(number, factorial2))
  -- Result should be 3628800
end
